start the dailyUpdate
select kwvalue from SAPR3.KEYWORD_T where name = 'keepingUpdate' and category ='ParkingKeeping' with ur
2019-04-15
MERGE INTO sapr3.ZDM_LOGHDR_FULL AS F USING(select * from sapr3.ZDM_LOGHDR where CREATE_TIME >='2019-04-15' ) AS S 
ON S.ZSESSION = F.ZSESSION 
WHEN MATCHED THEN UPDATE SET (F.MANDT,F.USERID,F.CREATE_TIME,F.ACTIV_TYPE,F.ACTIV_ID,F.OBJECT_ID,F.STATUS) = (S.MANDT,S.USERID,S.CREATE_TIME,S.ACTIV_TYPE,S.ACTIV_ID,S.OBJECT_ID,S.STATUS) 
WHEN NOT MATCHED THEN INSERT(F.MANDT,F.USERID,F.CREATE_TIME,F.ACTIV_TYPE,F.ACTIV_ID,F.OBJECT_ID,F.STATUS,F.ZSESSION) VALUES (S.MANDT,S.USERID,S.CREATE_TIME,S.ACTIV_TYPE,S.ACTIV_ID,S.OBJECT_ID,S.STATUS,S.ZSESSION)
571
MERGE INTO sapr3.ZDM_LOGDTL_FULL AS F USING(select * from sapr3.ZDM_LOGDTL where CREATE_TIME >='2019-04-15' ) AS S 
ON S.MANDT = F.MANDT and S.ZSESSION = F.ZSESSION and S.TEXT = F.TEXT 
WHEN MATCHED THEN UPDATE SET (F.MANDT,F.ZSESSION,F.CREATE_TIME,F.TEXT,F.TEXT_TYPE) = (S.MANDT,S.ZSESSION,S.CREATE_TIME,S.TEXT,S.TEXT_TYPE) 
WHEN NOT MATCHED THEN INSERT(F.MANDT,F.ZSESSION,F.CREATE_TIME,F.TEXT,F.TEXT_TYPE) VALUES (S.MANDT,S.ZSESSION,S.CREATE_TIME,S.TEXT,S.TEXT_TYPE)
MERGE INTO sapr3.ZDM_PARKTABLE_FULL AS F USING(select * from sapr3.ZDM_PARKTABLE where ZDM_CREATE_DATE >='20190415' or ZDM_UPDATE_DATE >='20190415' ) AS S 
ON S.MANDT = F.MANDT and S.ZDMCLASS = F.ZDMCLASS and S.ZDMLOGSYS = F.ZDMLOGSYS and S.ZDMMSGTYP = F.ZDMMSGTYP and S.ZDMOBJTYP = F.ZDMOBJTYP and S.ZDMOBJKEY = F.ZDMOBJKEY and S.ZDM_SESSION = F.ZDM_SESSION 
WHEN MATCHED THEN UPDATE SET (F.MANDT,F.ZDMCLASS,F.ZDMLOGSYS,F.ZDMMSGTYP,F.ZDMOBJTYP,
F.ZDMOBJKEY,F.ZDM_SESSION,F.ZDMRELNUM,F.ZDM_CHANGE_NUM,
F.TABNAME,F.ZDM_STATUS,F.ZDM_DEPSEQ,F.ZDM_TEXT,F.ZDM_CHANGE_TYPE,
F.ZDM_CDCHGNO,F.ZDM_REQ_PRIORITY,
F.ZDM_BROADCAST,F.ZDM_SOURCE,F.ZDM_CREATE_DATE,F.ZDM_CREATE_TIME,
F.ZDM_CREATE_USER,F.ZDM_UPDATE_DATE,
F.ZDM_UPDATE_TIME,F.ZDM_UPDATE_USER,F.ZDM_IDOC_SESSION,F.ZDM_JOBNUM,
F.ZDM_JOBNAME,F.ZDM_VARIANT,
F.ZDM_SUPD_JOBNUM,F.ZDM_SOURCE_IDOC,F.ZDM_TARGET_IDOC,
F.ZDM_SIDOC_STATUS,F.ZDM_TIDOC_STATUS
) = (S.MANDT,S.ZDMCLASS,S.ZDMLOGSYS,
S.ZDMMSGTYP,S.ZDMOBJTYP,S.ZDMOBJKEY,
S.ZDM_SESSION,S.ZDMRELNUM,S.ZDM_CHANGE_NUM,
S.TABNAME,S.ZDM_STATUS,S.ZDM_DEPSEQ,
S.ZDM_TEXT,S.ZDM_CHANGE_TYPE,S.ZDM_CDCHGNO,
S.ZDM_REQ_PRIORITY,S.ZDM_BROADCAST,S.ZDM_SOURCE,
S.ZDM_CREATE_DATE,S.ZDM_CREATE_TIME,
S.ZDM_CREATE_USER,S.ZDM_UPDATE_DATE,
S.ZDM_UPDATE_TIME,S.ZDM_UPDATE_USER,S.ZDM_IDOC_SESSION,
S.ZDM_JOBNUM,S.ZDM_JOBNAME,S.ZDM_VARIANT,
S.ZDM_SUPD_JOBNUM,S.ZDM_SOURCE_IDOC,S.ZDM_TARGET_IDOC,
S.ZDM_SIDOC_STATUS,S.ZDM_TIDOC_STATUS
) 
WHEN NOT MATCHED THEN INSERT(F.MANDT,F.ZDMCLASS,F.ZDMLOGSYS,F.ZDMMSGTYP,F.ZDMOBJTYP,
F.ZDMOBJKEY,F.ZDM_SESSION,F.ZDMRELNUM,F.ZDM_CHANGE_NUM,
F.TABNAME,F.ZDM_STATUS,F.ZDM_DEPSEQ,F.ZDM_TEXT,F.ZDM_CHANGE_TYPE,
F.ZDM_CDCHGNO,F.ZDM_REQ_PRIORITY,
F.ZDM_BROADCAST,F.ZDM_SOURCE,F.ZDM_CREATE_DATE,F.ZDM_CREATE_TIME,
F.ZDM_CREATE_USER,F.ZDM_UPDATE_DATE,
F.ZDM_UPDATE_TIME,F.ZDM_UPDATE_USER,F.ZDM_IDOC_SESSION,F.ZDM_JOBNUM,
F.ZDM_JOBNAME,F.ZDM_VARIANT,
F.ZDM_SUPD_JOBNUM,F.ZDM_SOURCE_IDOC,F.ZDM_TARGET_IDOC,
F.ZDM_SIDOC_STATUS,F.ZDM_TIDOC_STATUS
) VALUES (S.MANDT,S.ZDMCLASS,S.ZDMLOGSYS,
S.ZDMMSGTYP,S.ZDMOBJTYP,S.ZDMOBJKEY,
S.ZDM_SESSION,S.ZDMRELNUM,S.ZDM_CHANGE_NUM,
S.TABNAME,S.ZDM_STATUS,S.ZDM_DEPSEQ,
S.ZDM_TEXT,S.ZDM_CHANGE_TYPE,S.ZDM_CDCHGNO,
S.ZDM_REQ_PRIORITY,S.ZDM_BROADCAST,S.ZDM_SOURCE,
S.ZDM_CREATE_DATE,S.ZDM_CREATE_TIME,
S.ZDM_CREATE_USER,S.ZDM_UPDATE_DATE,
S.ZDM_UPDATE_TIME,S.ZDM_UPDATE_USER,S.ZDM_IDOC_SESSION,
S.ZDM_JOBNUM,S.ZDM_JOBNAME,S.ZDM_VARIANT,
S.ZDM_SUPD_JOBNUM,S.ZDM_SOURCE_IDOC,S.ZDM_TARGET_IDOC,
S.ZDM_SIDOC_STATUS,S.ZDM_TIDOC_STATUS
)
values TIMESTAMP('2019-04-15')-360 days with ur
MERGE INTO sapr3.ZDM_LOGHDR_FULL AS F USING(select * from sapr3.ZDM_LOGHDR where CREATE_TIME<'2018-04-20' ) AS S ON S.ZSESSION = F.ZSESSION 
WHEN MATCHED THEN UPDATE SET (F.MANDT,F.USERID,F.CREATE_TIME,F.ACTIV_TYPE,F.ACTIV_ID,F.OBJECT_ID,F.STATUS) = (S.MANDT,S.USERID,S.CREATE_TIME,S.ACTIV_TYPE,S.ACTIV_ID,S.OBJECT_ID,S.STATUS) 
WHEN NOT MATCHED THEN INSERT 
(F.MANDT,F.USERID,F.CREATE_TIME,F.ACTIV_TYPE,F.ACTIV_ID,F.OBJECT_ID,F.STATUS,F.ZSESSION) VALUES (S.MANDT,S.USERID,S.CREATE_TIME,S.ACTIV_TYPE,S.ACTIV_ID,S.OBJECT_ID,S.STATUS,S.ZSESSION)
select count(*) as count from sapr3.zdm_loghdr where CREATE_TIME<'2018-04-20'
MERGE INTO sapr3.ZDM_LOGDTL_FULL AS F USING(select * from sapr3.ZDM_LOGDTL where CREATE_TIME<'2018-04-20' ) AS S ON S.MANDT = F.MANDT and S.ZSESSION = F.ZSESSION and S.TEXT = F.TEXT 
WHEN MATCHED THEN UPDATE SET 
(F.MANDT,F.ZSESSION,F.CREATE_TIME,F.TEXT,F.TEXT_TYPE) = (S.MANDT,S.ZSESSION,S.CREATE_TIME,S.TEXT,S.TEXT_TYPE) 
WHEN NOT MATCHED THEN INSERT(F.MANDT,F.ZSESSION,F.CREATE_TIME,F.TEXT,F.TEXT_TYPE) VALUES (S.MANDT,S.ZSESSION,S.CREATE_TIME,S.TEXT,S.TEXT_TYPE)
select count(*) as count from sapr3.zdm_logdtl where CREATE_TIME<'2018-04-20'
MERGE INTO sapr3.ZDM_PARKTABLE_FULL AS F USING(select * from sapr3.ZDM_PARKTABLE where ZDM_CREATE_DATE<'20180420' or ZDM_UPDATE_DATE<'20180420' ) AS S 
ON S.MANDT = F.MANDT and S.ZDMCLASS = F.ZDMCLASS and S.ZDMLOGSYS = F.ZDMLOGSYS and S.ZDMMSGTYP = F.ZDMMSGTYP and S.ZDMOBJTYP = F.ZDMOBJTYP and S.ZDMOBJKEY = F.ZDMOBJKEY and S.ZDM_SESSION = F.ZDM_SESSION 
WHEN MATCHED THEN UPDATE SET (F.MANDT,F.ZDMCLASS,F.ZDMLOGSYS,F.ZDMMSGTYP,F.ZDMOBJTYP,
F.ZDMOBJKEY,F.ZDM_SESSION,F.ZDMRELNUM,F.ZDM_CHANGE_NUM,
F.TABNAME,F.ZDM_STATUS,F.ZDM_DEPSEQ,F.ZDM_TEXT,F.ZDM_CHANGE_TYPE,
F.ZDM_CDCHGNO,F.ZDM_REQ_PRIORITY,
F.ZDM_BROADCAST,F.ZDM_SOURCE,F.ZDM_CREATE_DATE,F.ZDM_CREATE_TIME,
F.ZDM_CREATE_USER,F.ZDM_UPDATE_DATE,
F.ZDM_UPDATE_TIME,F.ZDM_UPDATE_USER,F.ZDM_IDOC_SESSION,F.ZDM_JOBNUM,
F.ZDM_JOBNAME,F.ZDM_VARIANT,
F.ZDM_SUPD_JOBNUM,F.ZDM_SOURCE_IDOC,F.ZDM_TARGET_IDOC,
F.ZDM_SIDOC_STATUS,F.ZDM_TIDOC_STATUS
) = (S.MANDT,S.ZDMCLASS,S.ZDMLOGSYS,
S.ZDMMSGTYP,S.ZDMOBJTYP,S.ZDMOBJKEY,
S.ZDM_SESSION,S.ZDMRELNUM,S.ZDM_CHANGE_NUM,
S.TABNAME,S.ZDM_STATUS,S.ZDM_DEPSEQ,
S.ZDM_TEXT,S.ZDM_CHANGE_TYPE,S.ZDM_CDCHGNO,
S.ZDM_REQ_PRIORITY,S.ZDM_BROADCAST,S.ZDM_SOURCE,
S.ZDM_CREATE_DATE,S.ZDM_CREATE_TIME,
S.ZDM_CREATE_USER,S.ZDM_UPDATE_DATE,
S.ZDM_UPDATE_TIME,S.ZDM_UPDATE_USER,S.ZDM_IDOC_SESSION,
S.ZDM_JOBNUM,S.ZDM_JOBNAME,S.ZDM_VARIANT,
S.ZDM_SUPD_JOBNUM,S.ZDM_SOURCE_IDOC,S.ZDM_TARGET_IDOC,
S.ZDM_SIDOC_STATUS,S.ZDM_TIDOC_STATUS
) 
WHEN NOT MATCHED THEN INSERT(F.MANDT,F.ZDMCLASS,F.ZDMLOGSYS,F.ZDMMSGTYP,F.ZDMOBJTYP,
F.ZDMOBJKEY,F.ZDM_SESSION,F.ZDMRELNUM,F.ZDM_CHANGE_NUM,
F.TABNAME,F.ZDM_STATUS,F.ZDM_DEPSEQ,F.ZDM_TEXT,F.ZDM_CHANGE_TYPE,
F.ZDM_CDCHGNO,F.ZDM_REQ_PRIORITY,
F.ZDM_BROADCAST,F.ZDM_SOURCE,F.ZDM_CREATE_DATE,F.ZDM_CREATE_TIME,
F.ZDM_CREATE_USER,F.ZDM_UPDATE_DATE,
F.ZDM_UPDATE_TIME,F.ZDM_UPDATE_USER,F.ZDM_IDOC_SESSION,F.ZDM_JOBNUM,
F.ZDM_JOBNAME,F.ZDM_VARIANT,
F.ZDM_SUPD_JOBNUM,F.ZDM_SOURCE_IDOC,F.ZDM_TARGET_IDOC,
F.ZDM_SIDOC_STATUS,F.ZDM_TIDOC_STATUS
) VALUES (S.MANDT,S.ZDMCLASS,S.ZDMLOGSYS,
S.ZDMMSGTYP,S.ZDMOBJTYP,S.ZDMOBJKEY,
S.ZDM_SESSION,S.ZDMRELNUM,S.ZDM_CHANGE_NUM,
S.TABNAME,S.ZDM_STATUS,S.ZDM_DEPSEQ,
S.ZDM_TEXT,S.ZDM_CHANGE_TYPE,S.ZDM_CDCHGNO,
S.ZDM_REQ_PRIORITY,S.ZDM_BROADCAST,S.ZDM_SOURCE,
S.ZDM_CREATE_DATE,S.ZDM_CREATE_TIME,
S.ZDM_CREATE_USER,S.ZDM_UPDATE_DATE,
S.ZDM_UPDATE_TIME,S.ZDM_UPDATE_USER,S.ZDM_IDOC_SESSION,
S.ZDM_JOBNUM,S.ZDM_JOBNAME,S.ZDM_VARIANT,
S.ZDM_SUPD_JOBNUM,S.ZDM_SOURCE_IDOC,S.ZDM_TARGET_IDOC,
S.ZDM_SIDOC_STATUS,S.ZDM_TIDOC_STATUS
)
select count(*) as count from sapr3.zdm_parktable where ZDM_CREATE_DATE<'20180420' or ZDM_UPDATE_DATE<'20180420'
